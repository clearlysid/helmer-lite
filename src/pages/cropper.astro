---
import Base from "../components/base.astro";
---

<Base>
	<main>
		<section class="hidden">
			<div id="selectionBorder"></div>
			<div id="selectionInner"></div>
		</section>
		<button class="record hidden">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
				<circle cx="12" cy="12" r="10"></circle>
			</svg>
		</button>
	</main>
</Base>

<style>
  main {
    width: 100%;
    height: 100%;
    overflow: hidden;
    cursor: crosshair;
    position: relative;
    background: rgba(0, 0, 0, 0.4);
  }
  section {
    position: absolute;
  }

  #selectionInner {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  section::before,
  section::after,
  #selectionInner::before,
  #selectionInner::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.4);
  }

  section::before {
    top: 100%;
  }

  section::after {
    bottom: 100%;
  }

  #selectionInner::before,
  #selectionInner::after {
    width: 100vw;
    height: 200vh;
    top: -100vh;
    bottom: 0;
  }

  #selectionInner::before {
    left: 100%;
  }

  #selectionInner::after {
    right: 100%;
  }

  #selectionBorder {
    height: calc(100% - 4px);
    width: calc(100% - 4px);
    border: 2px dashed white;
    display: block;
  }
</style>
<script>
  import { invoke } from "@tauri-apps/api/tauri";
  import { getCurrent } from "@tauri-apps/api/window";
  const selectionEl = document.querySelector("section")!;
  const selectableAreaEl = document.querySelector("main")!;
  const buttonEl = document.querySelector("button")!;
  const buttonWidth = buttonEl.offsetWidth;
  const buttonHeight = buttonEl.offsetHeight;

  let isSelecting = false;
  let isRecording = false;
  let startX = 0;
  let startY = 0;
  let endX = 0;
  let endY = 0;
	let timer = 3;

  selectableAreaEl.addEventListener("mousedown", handleMouseDown);
  selectableAreaEl.addEventListener("mousemove", handleMouseMove);
  selectableAreaEl.addEventListener("mouseup", handleMouseUp);
  buttonEl.addEventListener("click", handleButtonClick);

	function handleMouseDown(e: MouseEvent) {
    isSelecting = true;
    selectableAreaEl.style.background = "transparent";
    buttonEl.classList.add("hidden");
    selectionEl.classList.remove("hidden");
    startX = e.clientX - selectableAreaEl.offsetLeft;
    startY = e.clientY - selectableAreaEl.offsetTop;
  }

  function handleMouseMove(e: MouseEvent) {
    if (isSelecting) {
      endX = e.clientX - selectableAreaEl.offsetLeft;
      endY = e.clientY - selectableAreaEl.offsetTop;

      const width = endX - startX;
      const height = endY - startY;

      selectionEl.style.width = `${Math.abs(width)}px`;
      selectionEl.style.height = `${Math.abs(height)}px`;
      selectionEl.style.left = `${width > 0 ? startX : endX}px`;
      selectionEl.style.top = `${height > 0 ? startY : endY}px`;
    }
  }

  function handleMouseUp() {
    if (isSelecting) {
      const buttonX = startX > endX ? endX - buttonWidth : endX;
      const buttonY = startY > endY ? endY - buttonHeight : endY;

      buttonEl.style.left = `${buttonX}px`;
      buttonEl.style.top = `${buttonY}px`;
    }
    isSelecting = false;
    buttonEl.classList.remove("hidden");
  }


	function handleButtonClick() {
		if(isRecording) return;
		console.log("selected area: ", startX, startY, endX, endY);
		// validate if selection is valid
		const isSelectionValid = startX !== endX && startY !== endY;

		console.log(isRecording);

		if (isSelectionValid) {
			isRecording = true;
			buttonEl.textContent = `${timer}`;
			const countdown = setInterval(() => {
				timer--;
				buttonEl.textContent = `${timer}`;
				if (timer === 0) {
					clearInterval(countdown);
					invoke("start_capture", {
						area: [startX, startY, endX, endY],
					}).then(() => {
						console.log("recording started");
					});
				}
			}, 1000);
		}
	}

  function closeCropper() {
    const win = getCurrent();
    selectionEl.style.width = "0px";
    selectionEl.style.height = "0px";
    selectionEl.style.left = "0px";
    selectionEl.style.top = "0px";
    buttonEl.classList.add("hidden");
    win.hide();
  }

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeCropper();
    }
  });
</script>
